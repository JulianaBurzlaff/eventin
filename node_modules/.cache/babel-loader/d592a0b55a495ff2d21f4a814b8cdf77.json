{"ast":null,"code":"var _jsxFileName = \"/Users/lucasbassetti/Dropbox/eventin/src/components/LongMenu/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport { useUsers } from \"../../Hooks/useUsers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst optionsUsers = [{\n  label: \"Events\",\n  value: \"/events\"\n}, {\n  label: \"My events\",\n  value: \"/events/user\"\n}, {\n  label: \"Logout\",\n  value: \"/home\"\n}];\nconst optionsAdmin = [{\n  label: \"Events\",\n  value: \"/events\"\n}, {\n  label: \"Users\",\n  value: \"/users\"\n}, {\n  label: \"Attendants\",\n  value: \"/attendants\"\n}, {\n  label: \"Logout\",\n  value: \"/home\"\n}];\nconst ITEM_HEIGHT = 48;\nexport default function LongMenu({\n  option = \"user\"\n}) {\n  _s();\n\n  const {\n    logout\n  } = useUsers();\n  const history = useHistory();\n  const [selectedOption, setSelectedOption] = React.useState();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMenuItemClick = (event, url) => {\n    if (url === \"/home\") {\n      logout();\n    } else {\n      history.push(url);\n      setSelectedOption(url);\n    }\n\n    setAnchorEl(null);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const options = option === \"user\" ? optionsUsers : optionsAdmin;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      \"aria-label\": \"more\",\n      \"aria-controls\": \"long-menu\",\n      \"aria-haspopup\": \"true\",\n      onClick: handleClick,\n      children: /*#__PURE__*/_jsxDEV(MoreVertIcon, {\n        style: {\n          fill: \"#E8F3F1\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Menu, {\n      id: \"long-menu\",\n      anchorEl: anchorEl,\n      keepMounted: true,\n      open: open,\n      onClose: handleClose,\n      PaperProps: {\n        style: {\n          maxHeight: ITEM_HEIGHT * 4.5,\n          width: \"20ch\"\n        }\n      },\n      children: options.map(({\n        label,\n        value\n      }) => /*#__PURE__*/_jsxDEV(MenuItem, {\n        selected: value === selectedOption,\n        onClick: event => handleMenuItemClick(event, value),\n        children: label\n      }, value, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LongMenu, \"b/B9sLEeGY1twe7kVWXYoHBnnFI=\", false, function () {\n  return [useUsers, useHistory];\n});\n\n_c = LongMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"LongMenu\");","map":{"version":3,"sources":["/Users/lucasbassetti/Dropbox/eventin/src/components/LongMenu/index.jsx"],"names":["React","useHistory","IconButton","Menu","MenuItem","MoreVertIcon","useUsers","optionsUsers","label","value","optionsAdmin","ITEM_HEIGHT","LongMenu","option","logout","history","selectedOption","setSelectedOption","useState","anchorEl","setAnchorEl","open","Boolean","handleClick","event","currentTarget","handleMenuItemClick","url","push","handleClose","options","fill","style","maxHeight","width","map"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport { useUsers } from \"../../Hooks/useUsers\";\n\nconst optionsUsers = [\n  {\n    label: \"Events\",\n    value: \"/events\",\n  },\n  {\n    label: \"My events\",\n    value: \"/events/user\",\n  },\n  {\n    label: \"Logout\",\n    value: \"/home\",\n  },\n];\n\nconst optionsAdmin = [\n  {\n    label: \"Events\",\n    value: \"/events\",\n  },\n  {\n    label: \"Users\",\n    value: \"/users\",\n  },\n  {\n    label: \"Attendants\",\n    value: \"/attendants\",\n  },\n  {\n    label: \"Logout\",\n    value: \"/home\",\n  },\n];\n\nconst ITEM_HEIGHT = 48;\n\nexport default function LongMenu({ option = \"user\" }) {\n  const { logout } = useUsers();\n  const history = useHistory();\n  const [selectedOption, setSelectedOption] = React.useState();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMenuItemClick = (event, url) => {\n    if (url === \"/home\") {\n      logout();\n    } else {\n      history.push(url);\n      setSelectedOption(url);\n    }\n\n    setAnchorEl(null);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const options = option === \"user\" ? optionsUsers : optionsAdmin;\n\n  return (\n    <div>\n      <IconButton\n        aria-label=\"more\"\n        aria-controls=\"long-menu\"\n        aria-haspopup=\"true\"\n        onClick={handleClick}\n      >\n        <MoreVertIcon style={{ fill: \"#E8F3F1\" }} />\n      </IconButton>\n      <Menu\n        id=\"long-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={open}\n        onClose={handleClose}\n        PaperProps={{\n          style: {\n            maxHeight: ITEM_HEIGHT * 4.5,\n            width: \"20ch\",\n          },\n        }}\n      >\n        {options.map(({ label, value }) => (\n          <MenuItem\n            key={value}\n            selected={value === selectedOption}\n            onClick={(event) => handleMenuItemClick(event, value)}\n          >\n            {label}\n          </MenuItem>\n        ))}\n      </Menu>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}