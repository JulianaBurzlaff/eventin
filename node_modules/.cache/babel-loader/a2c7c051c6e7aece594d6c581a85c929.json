{"ast":null,"code":"var _jsxFileName = \"/Users/lucasbassetti/Dropbox/eventin/src/pages/AttendantsList/index.jsx\";\nimport Header from \"../../components/Header\";\nimport ListDetail from \"../../components/ListDetail\";\nimport * as S from \"./styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst attendants = [{\n  fullname: \"Fulano\",\n  username: \"fulado.ciclano\",\n  password: 12345,\n  event: \"Scrum Day\"\n}, {\n  fullname: \"Fulano\",\n  username: \"fulado.ciclano\",\n  password: 12345,\n  event: \"Scrum Day\"\n}, {\n  fullname: \"Fulano\",\n  username: \"fulado.ciclano\",\n  password: 12345,\n  event: \"Scrum Day\"\n}];\n\nfunction AttendantsList() {\n  const row = attendants.map(attendant => [{\n    value: attendant.fullname,\n    size: \"30%\"\n  }, {\n    value: attendant.username,\n    size: \"30%\"\n  }, {\n    value: attendant.password,\n    size: \"30%\"\n  }, {\n    value: attendant.event,\n    size: \"30%\"\n  }]);\n  console.log(row);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      type: \"admin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(S.List, {\n      children: attendants.map(attendant => /*#__PURE__*/_jsxDEV(ListDetail, {\n        obj: attendant\n      }, attendant.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_c = AttendantsList;\nexport default AttendantsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"AttendantsList\");","map":{"version":3,"sources":["/Users/lucasbassetti/Dropbox/eventin/src/pages/AttendantsList/index.jsx"],"names":["Header","ListDetail","S","attendants","fullname","username","password","event","AttendantsList","row","map","attendant","value","size","console","log","id"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,yBAAnB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAO,KAAKC,CAAZ,MAAmB,UAAnB;;;AAEA,MAAMC,UAAU,GAAG,CACjB;AACEC,EAAAA,QAAQ,EAAE,QADZ;AAEEC,EAAAA,QAAQ,EAAE,gBAFZ;AAGEC,EAAAA,QAAQ,EAAE,KAHZ;AAIEC,EAAAA,KAAK,EAAE;AAJT,CADiB,EAOjB;AACEH,EAAAA,QAAQ,EAAE,QADZ;AAEEC,EAAAA,QAAQ,EAAE,gBAFZ;AAGEC,EAAAA,QAAQ,EAAE,KAHZ;AAIEC,EAAAA,KAAK,EAAE;AAJT,CAPiB,EAajB;AACEH,EAAAA,QAAQ,EAAE,QADZ;AAEEC,EAAAA,QAAQ,EAAE,gBAFZ;AAGEC,EAAAA,QAAQ,EAAE,KAHZ;AAIEC,EAAAA,KAAK,EAAE;AAJT,CAbiB,CAAnB;;AAqBA,SAASC,cAAT,GAA0B;AACxB,QAAMC,GAAG,GAAGN,UAAU,CAACO,GAAX,CAAgBC,SAAD,IAAe,CACxC;AAAEC,IAAAA,KAAK,EAAED,SAAS,CAACP,QAAnB;AAA6BS,IAAAA,IAAI,EAAE;AAAnC,GADwC,EAExC;AAAED,IAAAA,KAAK,EAAED,SAAS,CAACN,QAAnB;AAA6BQ,IAAAA,IAAI,EAAE;AAAnC,GAFwC,EAGxC;AAAED,IAAAA,KAAK,EAAED,SAAS,CAACL,QAAnB;AAA6BO,IAAAA,IAAI,EAAE;AAAnC,GAHwC,EAIxC;AAAED,IAAAA,KAAK,EAAED,SAAS,CAACJ,KAAnB;AAA0BM,IAAAA,IAAI,EAAE;AAAhC,GAJwC,CAA9B,CAAZ;AAOAC,EAAAA,OAAO,CAACC,GAAR,CAAYN,GAAZ;AAEA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,CAAD,CAAG,IAAH;AAAA,gBACGN,UAAU,CAACO,GAAX,CAAgBC,SAAD,iBACd,QAAC,UAAD;AAAY,QAAA,GAAG,EAAEA;AAAjB,SAAiCA,SAAS,CAACK,EAA3C;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAUD;;KApBQR,c;AAsBT,eAAeA,cAAf","sourcesContent":["import Header from \"../../components/Header\";\nimport ListDetail from \"../../components/ListDetail\";\nimport * as S from \"./styles\";\n\nconst attendants = [\n  {\n    fullname: \"Fulano\",\n    username: \"fulado.ciclano\",\n    password: 12345,\n    event: \"Scrum Day\",\n  },\n  {\n    fullname: \"Fulano\",\n    username: \"fulado.ciclano\",\n    password: 12345,\n    event: \"Scrum Day\",\n  },\n  {\n    fullname: \"Fulano\",\n    username: \"fulado.ciclano\",\n    password: 12345,\n    event: \"Scrum Day\",\n  },\n];\n\nfunction AttendantsList() {\n  const row = attendants.map((attendant) => [\n    { value: attendant.fullname, size: \"30%\" },\n    { value: attendant.username, size: \"30%\" },\n    { value: attendant.password, size: \"30%\" },\n    { value: attendant.event, size: \"30%\" },\n  ]);\n\n  console.log(row);\n\n  return (\n    <>\n      <Header type=\"admin\" />\n      <S.List>\n        {attendants.map((attendant) => (\n          <ListDetail obj={attendant} key={attendant.id} />\n        ))}\n      </S.List>\n    </>\n  );\n}\n\nexport default AttendantsList;\n"]},"metadata":{},"sourceType":"module"}